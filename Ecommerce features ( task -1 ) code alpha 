üìÇ Backend (Node.js, Express, MongoDB)

1Ô∏è‚É£ backend/config/database.js

const mongoose = require('mongoose');

const connectDatabase = () => {
    mongoose.connect(process.env.DB_URL, {
        useNewUrlParser: true,
        useUnifiedTopology: true,
    })
    .then((con) => console.log(`MongoDB connected: ${con.connection.host}`))
    .catch((err) => console.log(err));
};

module.exports = connectDatabase;


---

2Ô∏è‚É£ backend/models/productModel.js

const mongoose = require('mongoose');

const productSchema = new mongoose.Schema({
    name: String,
    price: Number,
    description: String,
    ratings: Number,
    images: [
        {
            image: String
        }
    ],
    category: String,
    seller: String,
    stock: Number,
    numOfReviews: Number,
    createdAt: {
        type: Date,
        default: Date.now
    }
});

const Product = mongoose.model('Product', productSchema);

module.exports = Product;


---

3Ô∏è‚É£ backend/controllers/productController.js

const Product = require('../models/productModel');

// Get all products
exports.getAllProducts = async (req, res) => {
    try {
        const products = await Product.find();
        res.status(200).json({ success: true, products });
    } catch (error) {
        res.status(500).json({ success: false, message: error.message });
    }
};

// Create new product
exports.createProduct = async (req, res) => {
    try {
        const product = await Product.create(req.body);
        res.status(201).json({ success: true, product });
    } catch (error) {
        res.status(500).json({ success: false, message: error.message });
    }
};


---

4Ô∏è‚É£ backend/routes/productRoutes.js

const express = require('express');
const { getAllProducts, createProduct } = require('../controllers/productController');

const router = express.Router();

router.get('/products', getAllProducts);
router.post('/product/new', createProduct);

module.exports = router;


---

5Ô∏è‚É£ backend/server.js

require('dotenv').config();
const express = require('express');
const cors = require('cors');
const connectDatabase = require('./config/database');
const productRoutes = require('./routes/productRoutes');

const app = express();
app.use(express.json());
app.use(cors());

// Connect Database
connectDatabase();

// Routes
app.use('/api', productRoutes);

const PORT = process.env.PORT || 5000;
app.listen(PORT, () => {
    console.log(`Server is running on port ${PORT}`);
});


---

6Ô∏è‚É£ backend/.env

PORT=5000
DB_URL=mongodb+srv://username:password@cluster.mongodb.net/ecommerce


---

üìÇ Frontend (React.js)

1Ô∏è‚É£ frontend/src/pages/Home.js

import React, { useEffect, useState } from 'react';
import axios from 'axios';

const Home = () => {
    const [products, setProducts] = useState([]);

    useEffect(() => {
        axios.get('http://localhost:5000/api/products')
            .then(res => setProducts(res.data.products))
            .catch(err => console.log(err));
    }, []);

    return (
        <div>
            <h2>Product List</h2>
            <ul>
                {products.map(product => (
                    <li key={product._id}>
                        {product.name} - ${product.price}
                    </li>
                ))}
            </ul>
        </div>
    );
};

export default Home;


---

2Ô∏è‚É£ frontend/src/App.js

import React from 'react';
import { BrowserRouter as Router, Routes, Route } from 'react-router-dom';
import Home from './pages/Home';

const App = () => {
    return (
        <Router>
            <Routes>
                <Route path="/" element={<Home />} />
            </Routes>
        </Router>
    );
};

export default App;


---

3Ô∏è‚É£ frontend/src/index.js

import React from 'react';
import ReactDOM from 'react-dom';
import App from './App';

ReactDOM.render(
    <React.StrictMode>
        <App />
    </React.StrictMode>,
    document.getElementById('root')
);